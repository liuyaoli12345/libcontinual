{'data_root': 'D:/codes/NJU/Third_Year/ml/BigHomework/cifar10', 'image_size': 32, 'pin_memory': False, 'augment': True, 'workers': 8, 'device_ids': 0, 'n_gpu': 1, 'seed': 1993, 'deterministic': True, 'epoch': 10, 'batch_size': 128, 'val_per_epoch': 10, 'optimzer': {'name': 'SGD', 'kwargs': {'lr': 0.1}}, 'lr_scheduler': {'name': 'StepLR', 'kwargs': {'gamma': 0.5, 'step_size': 10}}, 'warmup': 3, 'includes': ['headers/data.yaml', 'headers/device.yaml', 'headers/model.yaml', 'headers/optimizer.yaml', 'backbones/resnet12.yaml'], 'save_path': './', 'init_cls_num': 2, 'inc_cls_num': 2, 'task_num': 5, 'optimizer': {'name': 'SGD', 'kwargs': {'lr': 0.1}}, 'backbone': {'name': 'resnet18', 'kwargs': {'num_classes': 10, 'args': {'dataset': 'cifar10'}}}, 'buffer': {'name': 'LinearBuffer', 'kwargs': {'buffer_size': 500, 'batch_size': 32, 'strategy': 'random'}}, 'classifier': {'name': 'LUCIR', 'kwargs': {'num_class': 10, 'feat_dim': 512, 'init_cls_num': 2, 'inc_cls_num': 2, 'dist': 0.5, 'lamda': 10, 'K': 2, 'lw_mr': 1}}, 'rank': 0}
LUCIR(
  (backbone): ResNet(
    (conv1): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (classifier): CosineLinear()
  (loss_fn): CrossEntropyLoss()
)
Trainable params in the model: 11169857
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 0 Start!================
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 0 Training!================
The training samples number: 10000
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [0/10] |	Loss: 0.000 	Average Acc: 0.580 
learning rate: [0.06666666666666667]
================ Train on the train set ================
Epoch [1/10] |	Loss: 0.000 	Average Acc: 0.668 
learning rate: [0.1]
================ Train on the train set ================
Epoch [2/10] |	Loss: 0.000 	Average Acc: 0.762 
learning rate: [0.1]
================ Train on the train set ================
Epoch [3/10] |	Loss: 0.000 	Average Acc: 0.818 
learning rate: [0.1]
================ Train on the train set ================
Epoch [4/10] |	Loss: 0.000 	Average Acc: 0.857 
learning rate: [0.1]
================ Train on the train set ================
Epoch [5/10] |	Loss: 0.000 	Average Acc: 0.894 
learning rate: [0.1]
================ Train on the train set ================
Epoch [6/10] |	Loss: 0.000 	Average Acc: 0.928 
learning rate: [0.1]
================ Train on the train set ================
Epoch [7/10] |	Loss: 0.000 	Average Acc: 0.946 
learning rate: [0.1]
================ Train on the train set ================
Epoch [8/10] |	Loss: 0.000 	Average Acc: 0.963 
learning rate: [0.1]
================ Train on the train set ================
Epoch [9/10] |	Loss: 0.000 	Average Acc: 0.969 
================ Test on the test set ================
 * Average Acc: 0.870 Best acc 0.870
 Per-Task Acc:[0.87]
================Task 1 Start!================
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 1 Training!================
The training samples number: 10500
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [0/10] |	Loss: 0.000 	Average Acc: 0.692 
learning rate: [0.06666666666666667]
================ Train on the train set ================
Epoch [1/10] |	Loss: 0.000 	Average Acc: 0.864 
learning rate: [0.1]
================ Train on the train set ================
Epoch [2/10] |	Loss: 0.000 	Average Acc: 0.907 
learning rate: [0.1]
================ Train on the train set ================
Epoch [3/10] |	Loss: 0.000 	Average Acc: 0.958 
learning rate: [0.1]
================ Train on the train set ================
Epoch [4/10] |	Loss: 0.000 	Average Acc: 0.984 
learning rate: [0.1]
================ Train on the train set ================
Epoch [5/10] |	Loss: 0.000 	Average Acc: 0.995 
learning rate: [0.1]
================ Train on the train set ================
Epoch [6/10] |	Loss: 0.000 	Average Acc: 0.998 
learning rate: [0.1]
================ Train on the train set ================
Epoch [7/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [8/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [9/10] |	Loss: 0.000 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.610 Best acc 0.610
 Per-Task Acc:[0.29, 0.93]
================Task 2 Start!================
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 2 Training!================
The training samples number: 10500
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [0/10] |	Loss: 0.000 	Average Acc: 0.743 
learning rate: [0.06666666666666667]
================ Train on the train set ================
Epoch [1/10] |	Loss: 0.000 	Average Acc: 0.877 
learning rate: [0.1]
================ Train on the train set ================
Epoch [2/10] |	Loss: 0.000 	Average Acc: 0.936 
learning rate: [0.1]
================ Train on the train set ================
Epoch [3/10] |	Loss: 0.000 	Average Acc: 0.982 
learning rate: [0.1]
================ Train on the train set ================
Epoch [4/10] |	Loss: 0.000 	Average Acc: 0.995 
learning rate: [0.1]
================ Train on the train set ================
Epoch [5/10] |	Loss: 0.000 	Average Acc: 0.997 
learning rate: [0.1]
================ Train on the train set ================
Epoch [6/10] |	Loss: 0.000 	Average Acc: 0.998 
learning rate: [0.1]
================ Train on the train set ================
Epoch [7/10] |	Loss: 0.000 	Average Acc: 0.998 
learning rate: [0.1]
================ Train on the train set ================
Epoch [8/10] |	Loss: 0.000 	Average Acc: 0.998 
learning rate: [0.1]
================ Train on the train set ================
Epoch [9/10] |	Loss: 0.000 	Average Acc: 0.999 
================ Test on the test set ================
 * Average Acc: 0.487 Best acc 0.487
 Per-Task Acc:[0.04, 0.51, 0.91]
================Task 3 Start!================
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 3 Training!================
The training samples number: 10500
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [0/10] |	Loss: 0.000 	Average Acc: 0.861 
learning rate: [0.06666666666666667]
================ Train on the train set ================
Epoch [1/10] |	Loss: 0.000 	Average Acc: 0.927 
learning rate: [0.1]
================ Train on the train set ================
Epoch [2/10] |	Loss: 0.000 	Average Acc: 0.954 
learning rate: [0.1]
================ Train on the train set ================
Epoch [3/10] |	Loss: 0.000 	Average Acc: 0.987 
learning rate: [0.1]
================ Train on the train set ================
Epoch [4/10] |	Loss: 0.000 	Average Acc: 0.997 
learning rate: [0.1]
================ Train on the train set ================
Epoch [5/10] |	Loss: 0.000 	Average Acc: 0.999 
learning rate: [0.1]
================ Train on the train set ================
Epoch [6/10] |	Loss: 0.000 	Average Acc: 0.999 
learning rate: [0.1]
================ Train on the train set ================
Epoch [7/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [8/10] |	Loss: 0.000 	Average Acc: 0.999 
learning rate: [0.1]
================ Train on the train set ================
Epoch [9/10] |	Loss: 0.000 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.330 Best acc 0.330
 Per-Task Acc:[0.0, 0.2, 0.17, 0.95]
================Task 4 Start!================
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.03333333333333333
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 4 Training!================
The training samples number: 10500
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [0/10] |	Loss: 0.000 	Average Acc: 0.714 
learning rate: [0.06666666666666667]
================ Train on the train set ================
Epoch [1/10] |	Loss: 0.000 	Average Acc: 0.860 
learning rate: [0.1]
================ Train on the train set ================
Epoch [2/10] |	Loss: 0.000 	Average Acc: 0.940 
learning rate: [0.1]
================ Train on the train set ================
Epoch [3/10] |	Loss: 0.000 	Average Acc: 0.986 
learning rate: [0.1]
================ Train on the train set ================
Epoch [4/10] |	Loss: 0.000 	Average Acc: 0.999 
learning rate: [0.1]
================ Train on the train set ================
Epoch [5/10] |	Loss: 0.000 	Average Acc: 0.999 
learning rate: [0.1]
================ Train on the train set ================
Epoch [6/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [7/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [8/10] |	Loss: 0.000 	Average Acc: 1.000 
learning rate: [0.1]
================ Train on the train set ================
Epoch [9/10] |	Loss: 0.000 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.332 Best acc 0.332
 Per-Task Acc:[0.0, 0.0, 0.08, 0.72, 0.86]
Time cost :  872.368325471878
